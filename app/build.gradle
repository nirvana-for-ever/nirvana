plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt' // databinding需要引入，hilt也要
    id 'dagger.hilt.android.plugin' // hilt
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.nirvana.blog"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            // 是否应该生成可调试的apk
            debuggable true
//            buildConfigField 'String', 'BASE_URL', "\"http://192.168.0.107:5000/api/android/\""
            buildConfigField 'String', 'BASE_URL', "\"https://nirvana1234.xyz/api/android/\""
        }
        release {
            // 是否开启代码混淆，默认false
            minifyEnabled false
            // 混淆规则配置文件
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'BASE_URL', "\"https://nirvana1234.xyz/api/android/\""
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        // 启用 ViewBinding
        viewBinding true
    }
    // databinding启用，还需引入kotlin-kapt插件
    dataBinding {
        enabled = true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation project(path: ':shadowLibrary')
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // 自定义依赖

    // 万能adapter
    def base_adapter_version = "3.0.7"
    // paging3
    def paging_version = "3.1.0"
    // room
    def room_version = "2.4.0"// 2.4.0之后才能适配kotlin1.6
    // hilt-view
    def hilt_view_version = "1.0.0-alpha03"
    // retrofit
    def retrofit_version = "2.9.0"
    // okhttp
    def okhttp_version = "4.9.3"
    // viewmodel 的协程支持，有这个依赖才有 viewModelScope 可以使用
    def lifecycle_viewmodel_ktx_version = "2.4.0"
    // ViewModel 使用委托创建需要导入的依赖
    def activity_ktx_version = "1.4.0"
    def fragment_ktx_version = "1.4.0"
    // glide
    def glide_version = "4.13.0"
    // 沉浸式
    def immersionbar_version = "3.2.0"
    // navigation 组件
    def nav_version = "2.3.5"
    // RecyclerView 实现 item 自动换列排布
    def flexbox_version = "3.0.0"

    // 万能adapter
    implementation "com.github.CymChad:BaseRecyclerViewAdapterHelper:$base_adapter_version"

    // paging3
    implementation "androidx.paging:paging-runtime:$paging_version"

    // room
    implementation "androidx.room:room-runtime:$room_version" // room 的 api
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"// kt的room支持
    implementation "androidx.room:room-paging:$room_version"// paging3 room用PagingSource的支持

    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    // hilt-view
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_view_version"
    kapt "androidx.hilt:hilt-compiler:$hilt_view_version"

    // retrofit，自带okhttp
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    // retrofit的gson支持
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    // okhttp消息拦截器
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // viewmodel 的协程支持，有这个依赖才有 viewModelScope 可以使用
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel_ktx_version"
    // ViewModel 使用委托创建需要导入的依赖
    implementation "androidx.activity:activity-ktx:$activity_ktx_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_ktx_version"

    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    // 沉浸式
    // 基础依赖包，必须要依赖
    implementation "com.geyifeng.immersionbar:immersionbar:$immersionbar_version"
    // kotlin扩展（可选）
    implementation "com.geyifeng.immersionbar:immersionbar-ktx:$immersionbar_version"

    // navigation 组件
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"
    // Testing Navigation
    androidTestImplementation "androidx.navigation:navigation-testing:$nav_version"

    // RecyclerView 实现 item 自动换列排布
    implementation "com.google.android.flexbox:flexbox:$flexbox_version"
}